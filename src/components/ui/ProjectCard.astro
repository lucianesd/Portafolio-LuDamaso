---

import Paragraph from '@components/ui/Paragraph.astro';
import Button from '@components/ui/Button.astro'; // Asumo que Button acepta link, imageSrc, description
import SocialButton from '@components/ui/SocialButton.astro'; // Mantengo por si acaso, aunque no se use en el layout final preferido

export interface Props {
  title: string;
  description: string;
  link: string;
  text: string; // Texto para el span dentro del enlace hover
  icon: string; // Icono para el botón de acción final
  image: string; // Imagen de fondo para la tarjeta
  className?: string;
}

const { title, description, link, text, icon, image, className } = Astro.props;

// Nota sobre las rutas de imágenes:
// Si tus imágenes están en `src/assets` y quieres que Astro las procese (optimice, etc.),
// deberías importarlas o usar el componente <Image> de Astro.
// Si están en la carpeta `public/`, entonces las rutas relativas a la raíz como '/assets/projects/...' o '/icons/...' son correctas.
// Asumiremos que las rutas proporcionadas funcionan con tu configuración actual (probablemente usando la carpeta `public`).
---

<div class:list={["project_box", className]}>
  <div class="inner" style={`background-image: url(${image});`}>
    <a href={link} class="project_click" target="_blank" rel="noopener noreferrer">
      <div class="flex_this">
        <h3 class="project_title">{title}</h3>
        <span class="project_link">{text}</span>
        </div>
    </a>
  </div>
  <Paragraph className="text-white mx-4 my-4 text-start text-sm">
    {description}
  </Paragraph>
  <div class="text-start mx-4 mb-4">
     {/* Asumiendo que Button necesita un href o una acción onClick.
         Si Button es solo visual, está bien. Si debe enlazar,
         necesitaría una prop 'href={link}' o similar.
         Aquí usamos link para el 'href' del botón también por coherencia.
     */}
    <Button href={link} imageSrc={icon} description={`Icono para ${text}`} />
  </div>
</div>

<style>
  .project_box {
    background-color: #222; /* Un fondo sutil si la imagen no carga */
    border-radius: 8px; /* Bordes redondeados para la caja completa */
    overflow: hidden; /* Asegura que el contenido interno no se salga */
    display: flex;
    flex-direction: column;
    transition: transform 0.3s ease, box-shadow 0.3s ease;
  }

  .project_box:hover {
    transform: translateY(-5px);
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.3);
  }

  .project_box .inner {
    /* background-image es seteado inline via style */
    background-position: center center; /* Centrado por defecto */
    background-repeat: no-repeat;
    background-size: cover;
    display: block;
    /* margin: 10px; */ /* Eliminado margen interno, el espaciado lo dará el grid */
    overflow: hidden;
    height: 250px; /* Altura fija para la imagen de fondo */
    position: relative; /* Necesario para el overlay */
  }

  .project_box .inner .project_click {
    align-content: center;
    align-items: center;
    background-color: rgba(0, 0, 0, 0.3); /* Overlay inicial semi-transparente */
    color: #e0e0e0; /* Color de texto inicial */
    display: flex;
    flex-wrap: wrap;
    height: 100%; /* Ocupa toda la altura del .inner */
    width: 100%;
    justify-content: center; /* Centra el contenido */
    text-align: center;
    text-decoration: none;
    transition: background-color 300ms ease, color 300ms ease;
    position: absolute;
    top: 0;
    left: 0;
  }

  .project_box .inner .project_click:hover {
    background-color: rgba(10, 27, 51, 0.85); /* Overlay más oscuro al hacer hover */
    color: #fff; /* Texto blanco al hacer hover */
  }

  .flex_this {
    align-content: center;
    display: flex; /* Cambiado a flex para mejor control interno */
    flex-direction: column; /* Apila título y enlace verticalmente */
    align-items: center; /* Centra los elementos horizontalmente */
    justify-content: center; /* Centra los elementos verticalmente */
    flex-wrap: wrap;
    height: auto;
    padding: 20px; /* Aumentado padding para mejor visualización */
    transition: transform 300ms ease; /* Movimiento sutil */
    width: 100%;
  }

  .project_box .inner .project_click:hover .flex_this {
     transform: scale(1.05); /* Efecto de zoom ligero al contenido */
  }

  .project_title {
    display: block;
    font-size: 1.4em; /* Tamaño ajustado */
    font-weight: 700; /* Más peso */
    margin: 0 0 15px; /* Espacio debajo del título */
    width: 100%;
    color: #fff; /* Título siempre blanco para contraste */
    text-shadow: 1px 1px 3px rgba(0,0,0,0.5); /* Sombra para legibilidad */
  }

  /* .project_description se usa en Paragraph ahora */

  .project_link {
    border: 1px solid rgba(255, 255, 255, 0.7); /* Borde más sutil */
    color: rgba(255, 255, 255, 0.9); /* Color semi-transparente */
    display: inline-block;
    font-size: 0.8em;
    font-weight: 600; /* Ajustado peso */
    letter-spacing: 0.05em; /* Espaciado ajustado */
    padding: 8px 18px; /* Padding ajustado */
    text-transform: uppercase;
    border-radius: 20px; /* Más redondeado */
    transition: all 300ms ease;
    background-color: rgba(0, 0, 0, 0.2); /* Fondo ligero para destacar */
  }

  .project_click:hover .project_link {
    border-color: #fff; /* Borde blanco sólido al hacer hover */
    color: #fff; /* Texto blanco al hacer hover */
    background-color: rgba(0, 0, 0, 0.4); /* Fondo un poco más oscuro */
  }

  /* Estilos para el botón de acción final */
  /* Asumiendo que Button.astro no tiene muchos estilos propios */
  /* Puedes añadir estilos específicos aquí si es necesario */

</style>